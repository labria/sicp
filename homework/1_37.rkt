#lang sicp
(define (cont-frac n d k)
  (define (step i)
    (if (= i k) (/ (n i) (d i))
        (/ (n i) (+ (d i) (step (+ 1 i))))
        ))
  (step 1))

(define (gr k) (/ 1 (cont-frac (lambda (i) 1.0) (lambda (i) 1.0) k)))
(gr 1)
(gr 2)
(gr 3)
(gr 4)
(gr 5)
(display 5)
(gr 6)
(gr 7)
(gr 8)
(gr 9)
(gr 10)
(gr 15)
(gr 20)
(gr 50)
(gr 100)